// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp snapshot 1`] = `
Object {
  "constants": Array [],
  "displayName": "AuthorizationToken",
  "docs": Object {
    "links": Array [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
    ],
    "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  },
  "fqn": "Amazon.CDK.AWS.ECR.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken",
  "properties": Array [],
  "sourceFile": "lib/auth-token.ts",
  "sourceLine": 8,
  "staticMethods": Array [
    Object {
      "displayName": "GrantRead",
      "docs": Object {
        "summary": "Grant access to retrieve an authorization token.",
      },
      "fqn": "Amazon.CDK.AWS.ECR.AuthorizationToken.GrantRead",
      "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "Grantee",
          "docs": Object {},
          "fqn": "Amazon.CDK.AWS.ECR.AuthorizationToken.GrantRead.parameter.Grantee",
          "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "optional": undefined,
          "sourceFile": "lib/auth-token.ts",
          "sourceLine": 8,
          "submoduleFqn": undefined,
          "submoduleJsiiId": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "Amazon.CDK.AWS.IAM.IGrantable",
                "jsiiId": "@aws-cdk/aws-iam.IGrantable",
                "jsiiProjectName": "@aws-cdk/aws-iam",
                "jsiiProjectVersion": "99.99.99",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "returnType": Object {
        "formattingPattern": "void",
      },
      "sourceFile": "lib/auth-token.ts",
      "sourceLine": 8,
      "submoduleFqn": undefined,
      "submoduleJsiiId": undefined,
      "usage": "using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);",
    },
  ],
  "submoduleFqn": undefined,
  "submoduleJsiiId": undefined,
}
`;

exports[`csharp snapshot 2`] = `
" AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


# Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>Amazon.CDK.AWS.ECR.AuthorizationToken.GrantRead</code> | Grant access to retrieve an authorization token. |

---

## \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

Grant access to retrieve an authorization token.

### \`Grantee\`<sup>Required</sup> <a name=\\"Grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* undefined

---


"
`;

exports[`go snapshot 1`] = `
Object {
  "constants": Array [],
  "displayName": "AuthorizationToken",
  "docs": Object {
    "links": Array [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
    ],
    "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  },
  "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken",
  "properties": Array [],
  "sourceFile": "lib/auth-token.ts",
  "sourceLine": 8,
  "staticMethods": Array [
    Object {
      "displayName": "GrantRead",
      "docs": Object {
        "summary": "Grant access to retrieve an authorization token.",
      },
      "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.AuthorizationToken.GrantRead",
      "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "github.com/aws/aws-cdk-go/awscdkawsecr.AuthorizationToken.GrantRead.parameter.grantee",
          "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "optional": undefined,
          "sourceFile": "lib/auth-token.ts",
          "sourceLine": 8,
          "submoduleFqn": undefined,
          "submoduleJsiiId": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "github.com/aws/aws-cdk-go/awscdk/awsiam/awscdkawsiam.IGrantable",
                "jsiiId": "@aws-cdk/aws-iam.IGrantable",
                "jsiiProjectName": "@aws-cdk/aws-iam",
                "jsiiProjectVersion": "99.99.99",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "returnType": Object {
        "formattingPattern": "",
      },
      "sourceFile": "lib/auth-token.ts",
      "sourceLine": 8,
      "submoduleFqn": undefined,
      "submoduleJsiiId": undefined,
      "usage": "import \\"github.com/aws/aws-cdk-go/awscdkawsecr\\"

awscdkawsecr.AuthorizationToken_GrantRead(grantee IGrantable)",
    },
  ],
  "submoduleFqn": undefined,
  "submoduleJsiiId": undefined,
}
`;

exports[`go snapshot 2`] = `
" AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


# Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>github.com/aws/aws-cdk-go/awscdkawsecr.AuthorizationToken.GrantRead</code> | Grant access to retrieve an authorization token. |

---

## \`GrantRead\` <a name=\\"GrantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`go
import \\"github.com/aws/aws-cdk-go/awscdkawsecr\\"

awscdkawsecr.AuthorizationToken_GrantRead(grantee IGrantable)
\`\`\`

Grant access to retrieve an authorization token.

### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* undefined

---


"
`;

exports[`java snapshot 1`] = `
Object {
  "constants": Array [],
  "displayName": "AuthorizationToken",
  "docs": Object {
    "links": Array [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
    ],
    "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  },
  "fqn": "software.amazon.awscdk.services.ecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken",
  "properties": Array [],
  "sourceFile": "lib/auth-token.ts",
  "sourceLine": 8,
  "staticMethods": Array [
    Object {
      "displayName": "grantRead",
      "docs": Object {
        "summary": "Grant access to retrieve an authorization token.",
      },
      "fqn": "software.amazon.awscdk.services.ecr.AuthorizationToken.grantRead",
      "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "software.amazon.awscdk.services.ecr.AuthorizationToken.grantRead.parameter.grantee",
          "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "optional": undefined,
          "sourceFile": "lib/auth-token.ts",
          "sourceLine": 8,
          "submoduleFqn": undefined,
          "submoduleJsiiId": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "software.amazon.awscdk.services.iam.IGrantable",
                "jsiiId": "@aws-cdk/aws-iam.IGrantable",
                "jsiiProjectName": "@aws-cdk/aws-iam",
                "jsiiProjectVersion": "99.99.99",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "returnType": Object {
        "formattingPattern": "void",
      },
      "sourceFile": "lib/auth-token.ts",
      "sourceLine": 8,
      "submoduleFqn": undefined,
      "submoduleJsiiId": undefined,
      "usage": "import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)",
    },
  ],
  "submoduleFqn": undefined,
  "submoduleJsiiId": undefined,
}
`;

exports[`java snapshot 2`] = `
" AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


# Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>software.amazon.awscdk.services.ecr.AuthorizationToken.grantRead</code> | Grant access to retrieve an authorization token. |

---

## \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

Grant access to retrieve an authorization token.

### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* undefined

---


"
`;

exports[`python snapshot 1`] = `
Object {
  "constants": Array [],
  "displayName": "AuthorizationToken",
  "docs": Object {
    "links": Array [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
    ],
    "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  },
  "fqn": "aws_cdk.aws_ecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken",
  "properties": Array [],
  "sourceFile": "lib/auth-token.ts",
  "sourceLine": 8,
  "staticMethods": Array [
    Object {
      "displayName": "grant_read",
      "docs": Object {
        "summary": "Grant access to retrieve an authorization token.",
      },
      "fqn": "aws_cdk.aws_ecr.AuthorizationToken.grant_read",
      "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "aws_cdk.aws_ecr.AuthorizationToken.grant_read.parameter.grantee",
          "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "optional": undefined,
          "sourceFile": "lib/auth-token.ts",
          "sourceLine": 8,
          "submoduleFqn": undefined,
          "submoduleJsiiId": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "aws_cdk.aws_iam.IGrantable",
                "jsiiId": "@aws-cdk/aws-iam.IGrantable",
                "jsiiProjectName": "@aws-cdk/aws-iam",
                "jsiiProjectVersion": "99.99.99",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "returnType": Object {
        "formattingPattern": "None",
      },
      "sourceFile": "lib/auth-token.ts",
      "sourceLine": 8,
      "submoduleFqn": undefined,
      "submoduleJsiiId": undefined,
      "usage": "import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)",
    },
  ],
  "submoduleFqn": undefined,
  "submoduleJsiiId": undefined,
}
`;

exports[`python snapshot 2`] = `
" AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


# Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>aws_cdk.aws_ecr.AuthorizationToken.grant_read</code> | Grant access to retrieve an authorization token. |

---

## \`grant_read\` <a name=\\"grant_read\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

Grant access to retrieve an authorization token.

### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* undefined

---


"
`;

exports[`typescript snapshot 1`] = `
Object {
  "constants": Array [],
  "displayName": "AuthorizationToken",
  "docs": Object {
    "links": Array [
      "https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html",
    ],
    "summary": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  },
  "fqn": "@aws-cdk/aws-ecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken",
  "properties": Array [],
  "sourceFile": "lib/auth-token.ts",
  "sourceLine": 8,
  "staticMethods": Array [
    Object {
      "displayName": "grantRead",
      "docs": Object {
        "summary": "Grant access to retrieve an authorization token.",
      },
      "fqn": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "displayName": "grantee",
          "docs": Object {},
          "fqn": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "jsiiId": "@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee",
          "optional": undefined,
          "sourceFile": "lib/auth-token.ts",
          "sourceLine": 8,
          "submoduleFqn": undefined,
          "submoduleJsiiId": undefined,
          "type": Object {
            "formattingPattern": "%",
            "types": Array [
              Object {
                "displayName": "IGrantable",
                "fqn": "@aws-cdk/aws-iam.IGrantable",
                "jsiiId": "@aws-cdk/aws-iam.IGrantable",
                "jsiiProjectName": "@aws-cdk/aws-iam",
                "jsiiProjectVersion": "99.99.99",
                "packageName": "@aws-cdk/aws-iam",
                "packageVersion": "99.99.99",
              },
            ],
          },
        },
      ],
      "returnType": Object {
        "formattingPattern": "void",
      },
      "sourceFile": "lib/auth-token.ts",
      "sourceLine": 8,
      "submoduleFqn": undefined,
      "submoduleJsiiId": undefined,
      "usage": "import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)",
    },
  ],
  "submoduleFqn": undefined,
  "submoduleJsiiId": undefined,
}
`;

exports[`typescript snapshot 2`] = `
" AuthorizationToken <a name=\\"AuthorizationToken\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> [https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html](https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html)


# Static Functions <a name=\\"Static Functions\\" id=\\"Static Functions\\"></a>

| **Name** | **Description** |
| --- | --- |
| <code>@aws-cdk/aws-ecr.AuthorizationToken.grantRead</code> | Grant access to retrieve an authorization token. |

---

## \`grantRead\` <a name=\\"grantRead\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

Grant access to retrieve an authorization token.

### \`grantee\`<sup>Required</sup> <a name=\\"grantee\\" id=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead.parameter.grantee\\"></a>

- *Type:* undefined

---


"
`;
