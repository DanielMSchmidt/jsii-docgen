// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`csharp json snapshot 1`] = `
Object {
  "constants": Array [],
  "docs": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  "id": "Amazon.CDK.AWS.ECR.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "name": "AuthorizationToken",
  "properties": Array [],
  "staticFunctions": Array [
    Object {
      "id": "Amazon.CDK.AWS.ECR.AuthorizationToken.Initializer",
      "name": "GrantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "deprecated": false,
          "deprecationReason": undefined,
          "docs": "",
          "id": "Amazon.CDK.AWS.ECR.AuthorizationToken.Grantee",
          "name": "Grantee",
          "optional": false,
          "type": Object {
            "fqn": "@aws-cdk/aws-iam.IGrantable",
            "name": "Amazon.CDK.AWS.IAM.IGrantable",
          },
        },
      ],
      "snippet": "\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`
",
    },
  ],
}
`;

exports[`csharp markdown snapshot 1`] = `
" AuthorizationToken <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\"></a>

## \`GrantRead\` <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken.GrantRead\\"></a>

\`\`\`csharp
using Amazon.CDK.AWS.ECR;

AuthorizationToken.GrantRead(IGrantable Grantee);
\`\`\`

### \`Grantee\`<sup>Required</sup> <a name=\\"Amazon.CDK.AWS.ECR.AuthorizationToken.parameter.Grantee\\"></a>

- *Type:* [\`Amazon.CDK.AWS.IAM.IGrantable\`](#Amazon.CDK.AWS.IAM.IGrantable)

---


"
`;

exports[`java json snapshot 1`] = `
Object {
  "constants": Array [],
  "docs": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  "id": "software.amazon.awscdk.services.ecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "name": "AuthorizationToken",
  "properties": Array [],
  "staticFunctions": Array [
    Object {
      "id": "software.amazon.awscdk.services.ecr.AuthorizationToken.Initializer",
      "name": "grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "deprecated": false,
          "deprecationReason": undefined,
          "docs": "",
          "id": "software.amazon.awscdk.services.ecr.AuthorizationToken.grantee",
          "name": "grantee",
          "optional": false,
          "type": Object {
            "fqn": "@aws-cdk/aws-iam.IGrantable",
            "name": "software.amazon.awscdk.services.iam.IGrantable",
          },
        },
      ],
      "snippet": "\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`
",
    },
  ],
}
`;

exports[`java markdown snapshot 1`] = `
" AuthorizationToken <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\"></a>

## \`grantRead\` <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`java
import software.amazon.awscdk.services.ecr.AuthorizationToken;

AuthorizationToken.grantRead(IGrantable grantee)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"software.amazon.awscdk.services.ecr.AuthorizationToken.parameter.grantee\\"></a>

- *Type:* [\`software.amazon.awscdk.services.iam.IGrantable\`](#software.amazon.awscdk.services.iam.IGrantable)

---


"
`;

exports[`python snapshot 1`] = `
" AuthorizationToken <a name=\\"aws_cdk.aws_ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\"></a>

## \`grant_read\` <a name=\\"aws_cdk.aws_ecr.AuthorizationToken.grant_read\\"></a>

\`\`\`python
import aws_cdk.aws_ecr

aws_cdk.aws_ecr.AuthorizationToken.grant_read(
  grantee: IGrantable
)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"aws_cdk.aws_ecr.AuthorizationToken.parameter.grantee\\"></a>

- *Type:* [\`aws_cdk.aws_iam.IGrantable\`](#aws_cdk.aws_iam.IGrantable)

---


"
`;

exports[`typescript json snapshot 1`] = `
Object {
  "constants": Array [],
  "docs": "Authorization token to access private ECR repositories in the current environment via Docker CLI.",
  "id": "@aws-cdk/aws-ecr.AuthorizationToken",
  "initializer": undefined,
  "instanceMethods": Array [],
  "interfaces": Array [],
  "name": "AuthorizationToken",
  "properties": Array [],
  "staticFunctions": Array [
    Object {
      "id": "@aws-cdk/aws-ecr.AuthorizationToken.Initializer",
      "name": "grantRead",
      "parameters": Array [
        Object {
          "default": undefined,
          "deprecated": false,
          "deprecationReason": undefined,
          "docs": "",
          "id": "@aws-cdk/aws-ecr.AuthorizationToken.grantee",
          "name": "grantee",
          "optional": false,
          "type": Object {
            "fqn": "@aws-cdk/aws-iam.IGrantable",
            "name": "@aws-cdk/aws-iam.IGrantable",
          },
        },
      ],
      "snippet": "\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`
",
    },
  ],
}
`;

exports[`typescript markdown snapshot 1`] = `
" AuthorizationToken <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken\\"></a>

Authorization token to access private ECR repositories in the current environment via Docker CLI.

> https://docs.aws.amazon.com/AmazonECR/latest/userguide/registry_auth.html


# Static Functions <a name=\\"Static Functions\\"></a>

## \`grantRead\` <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken.grantRead\\"></a>

\`\`\`typescript
import { AuthorizationToken } from '@aws-cdk/aws-ecr'

AuthorizationToken.grantRead(grantee: IGrantable)
\`\`\`

### \`grantee\`<sup>Required</sup> <a name=\\"@aws-cdk/aws-ecr.AuthorizationToken.parameter.grantee\\"></a>

- *Type:* [\`@aws-cdk/aws-iam.IGrantable\`](#@aws-cdk/aws-iam.IGrantable)

---


"
`;
